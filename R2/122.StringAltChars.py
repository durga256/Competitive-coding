from collections import Counter
import math
s = 'bcaaa'
s = 'geeksforgeeks'
s='suvpgcszejbjuonibwnvsykddgosjgfksrydecshauqqhxypnbacpivwitjmtowlqxewvzhthhiqyumtsuowjpahltccielkhkudlohjjynarekeqojcqwwsyfzoiopqcgtvgnjdgtrvndhmfhfokceyctobwdlkxwsyuubewrfbilnkkraoxxzymvyzxqzcjwldvoodvxcfjzbezmohslmukwvgthftnwrboieckhdyvdtzfgasoeupbgqpianitpzqrecebxtsppaipgfidszshfoyopxxagmjxknksjwgizwlvxdvkbefojmchtiwwvnkqyjobpgbysspkrhkxdwgsbhysmogpgcqfhftitsdcrrpbmlbyisgduaqpaoebkwyoxdkvjutnobbdzzazmxqfmslbogrkdpeauezirrgfrygfabbgnwhilcgeeuwfluhjxezmlaefodtbrtjesyfnlsybxuduarboewnhluhjswmwhkifwriihrbqscqqblxbaptigkorpquwoowsncukrxphwnmevtqdpeexviapvcnphwmehnjaxutplamqaqoavcyfqzqmbpuxutjdnnzqmxomvmkukvgirgauvpuycocypxrbtumeplfdcjdwfmtprnddrdwgwafufgbknzatycsmdoueisxjorfigxilhgcfmyyguhnkxajidinxhudccpveqgspkkbqafqiskerzwwlnsohuzaofwvbkzqsdtnzusaplhgnmothrjcbuqygedeaowkeqpvpznbvociicbegolqvquomdtbbukufrkrvwzpfvgykpctaujlqugfimvumhvowxdunzoithjtjeceidjswklxcouyfreggrbxhuwvpqohvmglsiarqeqkcromwpturdqkinitbsogahbrolsoertjorgaxxpwgvucjajjnsygctuxhsianobpurhnqtfdnlmaiaxrnkfgyudwhzlyziztgsoqucswwyuqgzizebloqbjyhbahdgohxenjdsbmbabtfldjetdmajrxozahdwhpjxyidllnmbctxsmkpoltkhkwsbzapyzfxljgeuydvgkxadwwlrdioinqixwsxcptoeomgenptogweiyjreipujvgirprhuldbuojbaqsobngrlzkqrhpcdjofskhttudzhzqvvdklngebnsfnufjlxdandenlosnmdozpynotvmugzwbfydpaiueqequieslbgquvktdwbjjtlqdgilbtwmksbujubgmzguekqsxcfqaalwjvylevbkidgsitjybeedexhfztfysxktkaklzsmukhuhkvjylnxqoszgmlwkxsehlhfczoxwmmbrpykjsujovzwqudjvfzzonqhexbcoubfvkyjvevgrikcomxskfyvvengvfrqbfgvhmjauiahoxlyxebxsmrlrcwvnzlnrqrzpzrjulwuljblqphwdhlkogjynuhfoimaqqjoosphdmolkqdiwoeqirptjjovpthpjxlrvbiggvfeqjpvmytfqqmreofichuzmxisckpcaligblvzyacxenvdygkmgdnwrlthwlnmtycvwftbxcahhihmcgljmqwsvhyftzmswljqpjtommsakvemdkkfwrxfaihjpjwgdxasvpckkxeoiyczqhnscorynrrbxgkyqsltptknwqxbinsdmcnnvpukxwhrpxhtbobnwrmqbrfvxnbwarlxvegsfktagahtdziftzzhzlwdcdfvprlcdvhgctesxhxkbehfbhianpvppivwrhmuaavhcyatfgtoybwfrtixeoqzdyvlztwcxjklwabwjlprlglkvltpfgrivkngtrxqvgmekzbrubbkeioacesthfsawubyxsvyjrqfxassbhvatyfcxjmplnjonhtkslgvqteytcskujtsjinmxxfxkulyrazennrtzdqpnjaxodvysmjyguclsoscbtzquegziyyksfgcuhnmrtxnejvekgpfabeevmcxswwubwzrfycflcypvggsfzwvbigrplsxgbiuvousqcwdrewzlezfqwofqxytyhcgrgacejvsohcaiabzlunuujzvqdzmvuaegocylfqrgovzeyffnmiuyqdliaxpnqkducpuwapoicbkoqaukhnxjeyirjmcddqoiantrowhdhefsfsyxxppsejwcdvwatzlvkveldeqbafxliizplelslodqcnutdiaswqrfjeigkzrlcqpjgcvfvaiuzuhtkxmlsimragtdhgpfvxxemvbwoikcxdjkpxhlyrjnlrdjlthgjaelextsweetoqyxmmcjasjajbzmfmjwuzcwdtcofszuulareczscsoqvqluyvqxmslgtinvxywmawpbbdsfctcixyfsjayopvjbweckoycqtjfgzjwoxawirooanjftzmdzpevwqjcrkecrkvluanimgecdkkmjyyedekofvutclbfjdletcitzjzghmchduxgspsuksfjclnjlggziplewujocedtkghzyeczygnqanwkkznctfwwdalwmxcarfazzqalmsoawvfqwvcwhvnvkedpdbcibmizspclrkwkpyfkqhxvjcafqsnvmnvidxtxhwlwyqfwkawgvfkvqpyaxvwtyyjwmabhzsnwstjkaicikevvhylnuqjtcosrmkcecyrlecuekjvrwjfzedrnozadmmwpkoqjsmmynifgbtpbzqpjuouvwtqcrfeudljufgchblopaqriqxvatjwvttbwkncxifsjtojibfeqzbljrdmodczcaxtvqqhkiepfvmllqqcqzndiffyufynqcjmbgtxjggkmaesrtkmpnbbwmkliwkvvpuiticddnzrustrrbhyxcejrhzhsvbcuarzelbtabtaduigppbzbpyjhjoatjjufchvcdsyerlayssfzkskjrfdxztnxsriskeuzdmykjskvyrunactlzcxpyxgtmcadvawslzgbvfusqtjwoybmomziqhibdqqfabizcmmfcgxhqtkizjkiyuymypynylkbygqwhojshwdezofrewmyeginqwksdgarlfkgoljkghgwprgsyvzceszgvjmygojxeoajjeojdsgawhbmemfgycjtteuxdtrhjakhvyiphidlggthdycjjugaeisclaloynfdeljmihnjemkrokotwwupaevlucgbuuwmnyhdhybsxwjdkbwofuhzauiyzykuyutqpmcjorfnqrlbxjcpnmwzepnscenxbhfbhhbptpgaktedsoloywbpmqnoqmdgqgefuwivotrrndizwocldxydxzwwexmmduysbcnyzfyxbqksmnjlsmjunkigxulragtpbbsezencvqsnrjslqygkpczqgozjbalhnttffzlljzrkaslvsvdrckxmmdcjrogkfrsecmtywmhbaaqhrnwybnduckbnthgogkbzmuvxhypaljwlkzndvnhkgyqceyivfuseckivzelkmybndoycyqsdtpddphuiheeppcmqzjvbasdnteeydiroobgnknbsvbppmkpqdhfxsiqrgqhbjbscgngifbwzmmbxoffwmogpfaswbvxbvbtnoqjihrmhjfqllqmxqzyqyevjyxkvxowtnqmfsgwuykkbygyzeveoqllzivimrqrjqgvobpilipbndojeuorreuioesrwnpnwsrxwpwbslknekunydvfitymzsopxnqdtihugryojyfnccwvdidclrnisnwrosazgutyuqibzdzebbrhknuiwnicdzhrjwqsjrklbhorpcbeqfuoenrxruqlnfzluasqquwzrtwezneqeslrholtntxieraivuwjfwqxcydyzrgclprerzyubrmgeexfvkbnuspdbjgjoatyhczjiuhfnrlkjzjprdojbgfjylwdueskzujtbshejkoaibzzniazernsrbmxdvwlhredbosfruqvkjcxnlsylzpouckpnoovpqztqtuakobhljqjhuqaefwyafocfyydfwmaoyytejpbpcjgcacsfvbdubpbsqseaahihblkdcczokwkopdiawylcuuoehksxbvlsjsbkwzqrwyabekigpqtebdnxbqcyktjpgrrigladkvzsspiynxzeuhqxoavvdkkynfwhfocfzsidyliizyadfftznqeebmpsqnnbkokwiwmfpypgzuiefpflagmuaucdmdzfwrvpftvvwfbbojqnvlkvcsjgkpegqaqllaxpbbuugpxxucfskeiqiyuoitbyksmdelddchpsborghoyxblohfgfkrpyudwlnswxyfdxxmdwcmvqdizuesayasxfsfyvkwejektapadyucoxchnfxmzbfimsedlpzbgflinvgghhvqemqslczouknrtekluvyoivacividtilphniidngkvjwamgqqldhoiwbtxobshtijkagccjklechgvsijppwtfykwcbciknwsvlbnbanghnqchdezrbekpqizjggufqogtkvgdrasddsxanvngnjsagxjitrhgbuulzqrsgwmoshwukeksljiepwizjbbiyutnijcsfdxyjjsnslvblvninxiiarhqplagdkcfmfkupvkahaaspouvegafulkauymwocbzbalvipdwhgwiumehaazcvnjbjzduojqyudnpaarvevszifokutihnyrolgnnvbsxjamvgypfsffsauloejcsrubdkqxdhhqjxlkjrxuyaxeqftvknfnlnpmrptfpgltfgzucvmxnazatfqhywdpyuguauxkyocopwsndbfhwltiyanqotzdicnaxyyhudgmenzpitmbxyuioptvjecpqkdldrjnglhlazbwgngqztihtchvszvubwcwsfdrhjaqegxfcbxygesgyujjrsurzkgsffkozxlcdanotffudscgidlujwvdynuwybyvbfecfhjojzredfichsximosfjrmnyarufpbnhadfywymaujplnkkxodrvpajceqcgvvizbjrjsmjbhravsgjzhaoslppvahexdheqrxafgjiplagcpxsoljbreebjouvgfbfntxcktxupqhizrmoliwjlwnumotguxjcojpezdckdoyiscaotqbcqdsawyiifoblmblftgqsnnzxnxvfqpeybpbwduqscwetgwoouyfrwwzqijlqrdwfjeujtrojmcdaevlpjtqkvdfaxajuhngradstbdlkpjwwrkvlnusfnxlqqsrnsvyvjoitmbtpwlfzjwchmbekgtldrzjodymefaqbljaboaaejncqicsqoluwipjgkrhsghygieetbnqpihsdsknsdmwhvaeamsngqmcuxgowsnlsaucctnnktrbdoyhzwncompxgzjblguhxueyoshkwwtxozeksubakhcuprynwznbrdrvpsipbqrrgwyvupraomytwchiebinmbcasbnsflxkacqunurzdotssjlovdriisvjdxmhtnszzuucwzanbhknbiiacawmdorybzpmqhsddvcxamoshxhxylhrftpnyhjtvsvijidjgpqdyynivxvihhmplvcgjdnkdmuottxsvkklhybgaegikznovgjtjgfshekkkkwpcbdiefinreswgjmmcgxriireodnsdvmbqvhiiiuffohjokhrbooqfrfwsprqapxkuehlyzvexltzkezmoreuftakihjdkxpeftyqxedaylfiosimcbxytiqrzkizthpuabmfnqvkblwrrlzpzpduuaexkkkyusxkakbiraloobogwbkfhsyhdaouyogfebpysrdbwsrymomvptwjhasjpfdbspyfrofzkfmbbvjxrngujezbeyeucmjindkisolthmfrnavfrokcknknaldjdjolyqsuvgvhlhqtzbvrzawqkuxebzjktudfxtiuxqptqcvdwjzxqmkyrptwgejfxsakjpqmibghfkifijipoyxcyhuvxxbyksmxjebghkfodafgmviwnsjuhddkrlfszseuqzvkzbsqwcygznjgyopyhdwsqrtgxbotrjjdtruqannraqvsjbituisrioroaafrzfoaeodgqciisfsshpestjmneioehnqmdliljvdakjreaviarevnlytsnryiizyfdjfujbuvtwxznphxmofezumzxmirqzekyrtrcsbvlxevwrvblcggsoraimzqxfmfyfkxzleimolpufegpyfgfapbpffdakvzylrrbaasifpbdmnrdavrpxkpuugcunxumggbvwourakvghqhpocloxpeauspxqaeclojmaelwhsfmwafwfrwhfkrohlrgluayfhnpgcbygqayccfwosgemgoryqcpjbcnsmjdrssdowttwxdjoxhrogxieiizllulwjqekugeelceccdatadnwcropdgqmkruwgbzxayjbtjsbtvsxzkpwdeejiqhucluraquhcfqdlutqdenpnjdtblynjnzxzbecxnlbjvinjewllcrwcvrgncbmwfyxevjtantrbsmjxrxurhvrtiaybruhfwnpzpmwguthceggvxyyiprazeufqpkdzrktessvhybmkythuduggfehyqmjlqqicsmdzijkzojjvyvaugczfnvgmangravubynzuhxbgwefvawsskcmkfbljceqbaeoerccmofqypgnopjdhhstdedcrxivdecvwbmigwnvnnmducvapgdcnhymmxaaywhjhfavstkydolzgdnuinbywadmcofuwlwtnnbdztxifhmaqqclugzyflkryvlaoxhkqosdnojqtggtybywhxcuulezwcjqczooiimsuyxpflwmuersdljhxaotouygrrksqxptekavdptmwpynefbksyblmfrvifklmkwmbphdpiniyklzjbxpviyogxpyvasfvvkdlxytlupashvruvqhjeunqbzytgxixccrimgxrmjnpgzbrxcxbciewlqkgmhzzldrjnipjbublvqfsgkvdhfazjpanmhdvpobsungwpilzlljbmexgxqnbcmcogpzsziwzpaougbojxqsslagcqbylfazebswgxxhinybsqtuqfwatohrbvragehacndyihqahwyurbjumpdylesrtrlbijnxhstpohdcgqqgjfvzgoqpurtrucqwtuviatfcdyncbyhnemjzmivyznmxlujkargazyfunzwstbrelrfhnvntrxydwnzdsvatbxcfvsjzpiifkxowxkrsqppiyczcrbodmljwgzvybkprqhtenzhbufwhephcubeisrlgtyipkgvvbldyvaaavbkoqikltlvtgrgvbgriwtotgrdyjyonryismmzbklpvrtcgerigjgumhkfpvduxxjbqapjhtulrgtpfdjisdworadnarcobraooaahiohyjcfllcfpvqfitnpsrqnjspxitkxoptynbpmtrtzwilffkpziihawsrwtmoaryardgjpjhoiuzoqbkmycwkmsvvcszrkvwqqsblekklyhgchwuzxjtoliijjtprbrevghqjtubmzjgetwbqhytzxmqtzyoucfkchuotbpsnqvckcbfetymxphapxuxmnubkrfgtgamghbgecgvjxjjwahxhiwnxwnzthdypeymlxgpahegxpaqindpckumvqfvjqznjetudezgqgkifhpwljvoyvelaztahmmexzpzyedbndmeuidoatidigvaxfswolddyetteclefarzkkurrgtlphdisztnweezepvtlgowowqngrxrvtymtkpamcokynlohycizzhyrqcsgavoftrdkbsuomoyqyrfhtjcyntraewrwuzybsptfxdbulwoqduvumrwoqogiqkrilmrroimaxdwcbhbkbhasffwidvfazxnkdglxjnsahlhrmmvgzxbpgurgareaphmwdketepslnclqziugcogrltuenrcrqxacfjmyozvcjibfxwrqbqykcsdkoaepadvwlibsnwsjkextkdjlrisrwizaejbtiikkdmwktdacqimaazzldchmesfgmbrptrknmmgwubjxnsmabljhivhhprlmuvsldsrhrzoddznhwzmdovbcjmkktsqwiduzsxymeacxgpvsigxztbjsszspskjtymvtgrsmzagvvaiphppeuchxhwvcpsqnzkxvuqjpsnlvtjsvfujqbzfmrjfxrqkloxzhafwgoiiwinuqhetfseyiccfxzxzyxwummvwoicaextnohpyeycnjgeoiwhkuguzkrrhhcsfisitbvulfipjkohjahzyjbjyjagqoozrsfznrxanozqwnxyilnnjkkmkhffbhgweynuqcyminjnfwppxtfmxeonrconloayuiheeudxmysfslayxawxttuppipprpzrzsdsiuwoetjvsaimtqcmfiqogvbnhcmiwlaflktqjamcmfdagzfgznevzbtkefvtqmfadianiadpqaammbzbvettgnidoxymafpuccmcprbofrmcsnncefbnnfhhkwoiwxsgzahxffgevnjhzffztioypgqnxjnibcfvvybitdddpqzbfdrhildqfzhmkdbuakgshutonssecqrnftclzemmxsshtyvazzxljroedrptuxzmnzhcqkgxmtnkiurxmrnxwjquivnhqrjnzfslyrletjzqjtavsgcdtxrijosblwynezzqlsnwojlnolqbgnuucwazygkhvksniqzofexautcknntlymdrskfbmqqyrmpehgamfqjhfgwhhniltwknfjmdgqyaywcyjnktmxneektovadpokkpwfxabxuqmkboltzbyroccpefooqbpqhdpstrvanyzudzmoogbrzrhpsxkimgfozsjztbcnwtawsibwmkekosgkqkvshthsdadqtxvibiywyacxnbjyzqqciqehxbdahfnlfgnoioqosyhfdegmmahqwrwpvgkhxgwqfixrjwvechpygtrghbngykyvbvjjiulpsetcqqtkckhhftzsdcixmkmxyrsayhrcauexppelzwtgeyrcdcwmqiogjltipbuvpuzvsfbvqvqzhwjkfwxdwvkyfknrmtowgvywqedsfqpcxgrxrljklbgdwsrtjtqdqqfymxiqcwabzlhdhtejcikdjiqgymlrdbrcxfnrpqysvrsfmpkmjzyahmjculhqfutuxzhxqrclxyauzitmauqsgrqfmdjrtwahfuckivudgrdmsndbmmqxipdnengpddyldaqxefmqiiuxfzqmdyneytzpgeegjqllnnuqwvhezaopqczvdzsrkqfnznuubabregezigpfvanujrfztymsighnbqziakyhovqcmgunffrrjoretuxzvkqpggjwthspxpgzbmsoaqlpxcdqnoikkojpsxpvyezjfhfcevcscymevvroqsdrubgekwqfpqxgpsxrnakrvgprxwkakrkoudmzktcjgtmdorxuicnlpcbguwbvwaxtddmcuwrnsazkkcy'
def f(s):
    n = len(s)
    d = Counter(s); res = ''

    for i in d:
        if d[i] > math.ceil(n/2):
            print(i)
            return '-1'
        
    arr = []
    for i in d:
        arr.append([i, d[i]])

    arr.sort(key=lambda x: x[1], reverse=True)
    print(arr)
    # res = ''
    # while arr:
    #     res += arr[0][0]
    #     arr[0][1] -= 1
    #     if len(arr) > 1:
    #         res += arr[1][0]
    #         arr[1][1] -= 1
    #         if arr[1][1] == 0:
    #             arr.pop(1)
    #     if arr[0][1] == 0:
    #         arr.pop(0)
    #     arr.sort(key=lambda x: x[1], reverse=True)

    res = list(s)
    i = 0
    while i < n:
        res[i] = arr[0][0]
        arr[0][1] -= 1
        if arr[0][1] == 0:
            arr.pop(0)
        i += 2
    
    i = 1
    while i < n:
        res[i] = arr[0][0]
        arr[0][1] -= 1
        if arr[0][1] == 0:
            arr.pop(0)
        i += 2
    return ''.join(res)

print(f(s))